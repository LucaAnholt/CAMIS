---
Python Log KaplanMeierFitter
---

## Import the KaplanMeierFitter from lifelines and pandas library
import pandas as pd
from lifelines import KaplanMeierFitter

## Data used
## Creat the dataframe and printing the top rows from data source
df = pd.read_sas('whas500.sas7bdat')
df.head()

## Example Code
## Choose the right columns for analysis
df = df[["LENFOL", "AFB", "FSTAT"]]

## Change follow-up days to years for better visualization
df['LENFOL'] = df['LENFOL']/365.25
df['LENFOL'] = df['LENFOL'].round(decimals = 2)

## Create of two dataframe when AFB=1.0 and AFB=0.0
afb_yes = df[df['AFB'] == 1.0]
afb_no  = df[df['AFB'] == 0.0]

## Create Kaplan-Meier estimator
kmf_yes = KaplanMeierFitter()
kmf_no = KaplanMeierFitter()

## Fit Kaplan-Meier estimator to data
kmf_yes.fit(afb_yes['LENFOL'], event_observed=afb_yes['FSTAT'])
kmf_no.fit(afb_no['LENFOL'], event_observed=afb_no['FSTAT'])

## Calculate confidence interval for the survival function
confidence_interval_yes = kmf_yes.confidence_interval_survival_function_
confidence_interval_no = kmf_no.confidence_interval_survival_function_

## The estimated survival function if AFB=1.0
kmf_yes.survival_function_

## The estimated survival function if AFB=0.0
kmf_no.survival_function_

## The lower and upper confidence intervals for the survival function when AFB=1.0 and AFB=0.0
confidence_interval_yes = kmf_yes.confidence_interval_survival_function_
confidence_interval_no = kmf_no.confidence_interval_survival_function_

## Printing the result of confidence intervals for the survival function when AFB=1.0
print("Log Transformation of Confidence Interval ABF=Yes:")
confidence_interval_yes

## Printing the result of confidence intervals for the survival function when AFB=0.0
print("Log Transformation of Confidence Interval ABF=No:")
confidence_interval_no

## Predict of the KM_estimate survival at 1,3 and 5 year if AFB=1.0
kmf_yes.predict([1,3,5], interpolate = True).round(3)

## KM_estimate on 1,2,3 quartile if AFB=1.0
kmf_yes.percentile([0.25,0.50,0.75])

## Median of the KM_estimate survival if AFB=1.0
kmf_yes.median_survival_time_

## Predict of the KM_estimate survival at 1,3 and 5 year if AFB=0.0
kmf_no.predict([1,3,5], interpolate = True).round(3)

## KM_estimate on 1,2,3 quartile if AFB=0.0
kmf_no.percentile([0.25,0.50,0.75])

## Median of the KM_estimate survival if AFB=0.0
kmf_no.median_survival_time_